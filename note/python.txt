1、BFS广度优先搜索 【儿子往后排】
与队列绑定，注意边界

python里队列实现
1、from queue import Queue
put()  get()实现入、栈
2.collections.deque()
popleft()  append()  是否为空直接if判断

采用list
1、pop() 出栈  insert(0, val) 入栈
2、append(val) 入栈  list[0] del list[0]出栈

2、DFS   【儿子插队】
与栈\递归绑定

递归：【儿子排队，儿子生儿子，生完继续排，继续生】

python实现栈
list
出栈pop() 入栈append() 

3、递归  【儿子插队】


4、多源优先搜索【广度优先搜索扩展版】
目标：已知已知多个点集合，找到所有临近的点，找到后再把临近点放进集合，再次迭代。
首先起始为多个点的集合
将点存入队列
遍历队列：
       遍历点相邻的点，判断是否在集合中，不在则加入集合及队列
【集合添加元素，add()    队列collections.deque()  popleft()  append()】


5、无重叠数组
滑动窗口，几个窗口，每次记录第一个窗口最大值，与第二个窗口最大值。。
依次类推，保存最大的位置

6、回溯（46题）
主体函数：首先操作-->然后递归-->撤销操作  等等
问题：怎么维护保存结果的容器(784题，自己使用的回溯法)

7、动态规划
特点：按步移动，状态可转移

未刷完的题目
11：77，784

动态规划：
70爬楼梯，
198打家劫舍，
120给定一个三角形 triangle ，找出自顶向下的最小路径和

位运算： 
二进制 
与&： 两个位数全为 1，结果才为1
或| :
异或^、取反~、左移<<、右移>>，2的i次方：1<<i
13：231， 191


14：190 136


数据结构基础
169只出现一次数字：
位运算，异或解法
交换律：a ^ b ^ c <=> a ^ c ^ b
任何数于0异或为任何数 0 ^ n => n
相同的数异或为0: n ^ n => 0